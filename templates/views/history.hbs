<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="assets/css/stylesheet.css">
    {{!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"> --}}
    <title>Document</title>
</head>
<body>
    <style>
        .auto-index{
            counter-reset: Serial; 
        }
        .auto-index .th:first-child:before
{
  counter-increment: Serial;      /* Increment the Serial counter */
  content: counter(Serial); /* Display the counter */
}
    </style>


    {{>navbar}}
    
    <div class="sidebar">
        <a  href="membership">Buy Membership</a>
        <a href="subscription">Subscriptions</a>
        <a class="active" href="history">History</a>
        <a href="logout" >Logout</a>
        <!-- <a href="#contact">Contact</a>
        <a href="#about">About</a> -->
      </div>



      <div class="content-sub">
    <div class="container">
    <table id="dataTable" class="table table-dark auto-index">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Payment for (In Months)</th>
      <th scope="col">Payment Date</th>
      <th scope="col">Payment Amount</th>
    </tr>
  </thead>
  <tbody>
    {{#each subscriptionDetails}}
    <tr>
        
      <th class="th" scope="col"></th>
      <td>{{paymentForInMonths}}</td>
      <td>{{paymentDate}}</td>
      <td>{{paymentAmount}}</td>
      
    </tr>
    {{/each}}
    {{!-- <tr>
      <th scope="row">2</th>
      <td>Jacob</td>
      <td>Thornton</td>
      <td>@fat</td>
    </tr>
    <tr>
      <th scope="row">3</th>
      <td>Larry</td>
      <td>the Bird</td>
      <td>@twitter</td>
    </tr> --}}
  </tbody>
</table>
    </div>
</div>

{{>footer}}
</body>
{{!-- <script>
    function addRow(tableID) {
        var table = document.getElementById(tableID);
        var rowCount = table.rows.length;
        var row = table.insertRow(rowCount);
        var colCount = table.rows[0].cells.length;

        for(var i=0; i<colCount; i++) {
            var newcell = row.insertCell(i);
            if(i==1){newcell.innerHTML = (rowCount+1)}
            else{
            newcell.innerHTML = table.rows[0].cells[i].innerHTML;
               }
            switch(newcell.childNodes[0].type) {
                case "text":
                        newcell.childNodes[0].value = "";
                        break;
                case "checkbox":
                        newcell.childNodes[0].checked = false;
                        break;
                case "select-one":
                        newcell.childNodes[0].selectedIndex = 0;
                        break;
               
            }
        }
    }

function regroup(i,rc,ti)
{
  for(j = (i+1);j<rc;j++)
    {
      document.getElementById(ti).rows[j].cells[1].innerHTML = j+1;
      }
}
function deleteRow(tableID) {
        try {
        var table = document.getElementById(tableID);
        var rowCount = table.rows.length;
        var current = '';
        for(var i=0; i<rowCount; i++) {
            var row = table.rows[i];
            var chkbox = row.cells[0].childNodes[0];
            if(null != chkbox && true == chkbox.checked) {
                if(rowCount <= 1) {
                    alert("Cannot delete all the rows.");
                    break;
                }
              
                table.deleteRow(i);
                rowCount--;
                i--;
              regroup(i,rowCount,tableID);
            }
        }
        }catch(e) {
            alert(e);
        }
    }
</script> --}}
</html>